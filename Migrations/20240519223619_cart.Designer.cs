// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PawWebApp.Models;

#nullable disable

namespace PawWebApp.Migrations
{
    [DbContext(typeof(TranaWareContext))]
    [Migration("20240519223619_cart")]
    partial class cart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PawWebApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PawWebApp.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("PawWebApp.Models.CPU", b =>
                {
                    b.Property<int>("CPUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CPUID"));

                    b.Property<string>("CPUBaseClock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoreNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUL2Cache")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUL3Cache")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CPULaunchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CPUMaxBoostClock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUMaxTemp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUPlatform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUSocket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUTDP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUThreadNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.HasKey("CPUID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("CPUs");
                });

            modelBuilder.Entity("PawWebApp.Models.CPUCooler", b =>
                {
                    b.Property<int>("CPUCoolerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CPUCoolerID"));

                    b.Property<string>("CPUCoolerAirPressure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerAirflux")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerBearing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerConnector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerCoolingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerDimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerLCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerLED")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerNoise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerNrVents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerPWMVent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerPumpConnector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerPumpNoise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerPumpSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerRotationSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerSocket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUCoolerWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.HasKey("CPUCoolerID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("CPUCoolers");
                });

            modelBuilder.Entity("PawWebApp.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("PawWebApp.Models.GPU", b =>
                {
                    b.Property<int>("GPUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GPUID"));

                    b.Property<string>("GPUBostClock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUCooling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUCudaCores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUDisplayPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUGraphicProcessor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUHDMI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUInterface")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUMaxResolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUMemoryBus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUMemoryFrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUMemorySize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUMemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPURasterOperators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUShaderModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUTechnology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPUTextureUnits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.HasKey("GPUID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("GPUs");
                });

            modelBuilder.Entity("PawWebApp.Models.HDD", b =>
                {
                    b.Property<int>("HDDID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HDDID"));

                    b.Property<string>("HDDBuffer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDDCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDDFormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDDInterface")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDDNASRecommend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDDSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDDSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.HasKey("HDDID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("HDDs");
                });

            modelBuilder.Entity("PawWebApp.Models.Motherboard", b =>
                {
                    b.Property<int>("MotherboardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotherboardID"));

                    b.Property<string>("MotherboardAudioChipset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardBackPorts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardChipset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardChipsetModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardChipsetProducer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardDiskSlots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardGraphicInterface")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardIntegratedAudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardIntegratedGraphics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardIntegratedNetwork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardMaxMemory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardMemTechnology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardMemorySlots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardMemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardNetworkChipset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardPCISlots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardRAID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardSocket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardSupportedCPU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherboardSupportedFreq")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.HasKey("MotherboardID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("Motherboards");
                });

            modelBuilder.Entity("PawWebApp.Models.Newsletter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Newsletters");
                });

            modelBuilder.Entity("PawWebApp.Models.PCCase", b =>
                {
                    b.Property<int>("PCCaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PCCaseID"));

                    b.Property<string>("PCCaseBays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseCPUCoolerHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseCompatibleMB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseCoolers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseDimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseExpSlots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseGPUCoolerHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseMesh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCasePSU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCasePSUPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCasePorts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseRadiatorSupport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseSidePanel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCCaseWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.HasKey("PCCaseID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("PCCases");
                });

            modelBuilder.Entity("PawWebApp.Models.PSU", b =>
                {
                    b.Property<int>("PSUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PSUID"));

                    b.Property<string>("PSUCertification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUDimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUEfficiency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUModular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUNoise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUPFC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUPorts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUPower")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSUVents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.HasKey("PSUID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("PSUs");
                });

            modelBuilder.Entity("PawWebApp.Models.PcComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PCComponents");
                });

            modelBuilder.Entity("PawWebApp.Models.RAM", b =>
                {
                    b.Property<int>("RAMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RAMID"));

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.Property<string>("RAMDualChannel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMLatency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMMemCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMMemFrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMMemLED")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMMemStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMMemTension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMMemTiming")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMMemoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMRadiator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RAMID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("RAMs");
                });

            modelBuilder.Entity("PawWebApp.Models.SSD", b =>
                {
                    b.Property<int>("SSDID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSDID"));

                    b.Property<int>("PcComponentId")
                        .HasColumnType("int");

                    b.Property<string>("SSDCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDFormFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDInterface")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDMaxRead")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDMaxWrite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDNVMeSupport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDRandom4KBRead")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDRandom4KBWrite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SSDID");

                    b.HasIndex("PcComponentId")
                        .IsUnique();

                    b.ToTable("SSDs");
                });

            modelBuilder.Entity("PawWebApp.Models.Upgrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Upgrades");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PawWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PawWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PawWebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PawWebApp.Models.CPU", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("CPU")
                        .HasForeignKey("PawWebApp.Models.CPU", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.CPUCooler", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("CPUCooler")
                        .HasForeignKey("PawWebApp.Models.CPUCooler", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.GPU", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("GPU")
                        .HasForeignKey("PawWebApp.Models.GPU", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.HDD", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("HDD")
                        .HasForeignKey("PawWebApp.Models.HDD", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.Motherboard", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("Motherboard")
                        .HasForeignKey("PawWebApp.Models.Motherboard", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.PCCase", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("PCCase")
                        .HasForeignKey("PawWebApp.Models.PCCase", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.PSU", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("PSU")
                        .HasForeignKey("PawWebApp.Models.PSU", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.RAM", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("RAM")
                        .HasForeignKey("PawWebApp.Models.RAM", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.SSD", b =>
                {
                    b.HasOne("PawWebApp.Models.PcComponent", "pcComponent")
                        .WithOne("SSD")
                        .HasForeignKey("PawWebApp.Models.SSD", "PcComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pcComponent");
                });

            modelBuilder.Entity("PawWebApp.Models.PcComponent", b =>
                {
                    b.Navigation("CPU");

                    b.Navigation("CPUCooler");

                    b.Navigation("GPU");

                    b.Navigation("HDD");

                    b.Navigation("Motherboard");

                    b.Navigation("PCCase");

                    b.Navigation("PSU");

                    b.Navigation("RAM");

                    b.Navigation("SSD");
                });
#pragma warning restore 612, 618
        }
    }
}
